{"version":3,"sources":["core/utils.ts","core/scenes/Splash.tsx","core/components/GameInstanceRenderer.tsx","games/Arcanoid/constants.ts","games/Arcanoid/components/Bricks.tsx","games/Arcanoid/levels.ts","games/Arcanoid/components/Handle.tsx","games/Arcanoid/components/Background.tsx","games/Arcanoid/components/Ball.tsx","games/Arcanoid/components/Walls.tsx","games/Arcanoid/components/UI/MainMenu.tsx","games/Arcanoid/index.tsx","App.tsx","index.tsx"],"names":["toRadians","angle","Math","PI","SplashCube","position","useBox","args","mass","ref","color","CrusherCube","rotation","Splash","intensity","styles","previewContainer","absolutePositionStyle","top","left","right","bottom","GameInstanceRenderer","instance","useState","showSplash","setShowSplash","Game","Ui","useEffect","setTimeout","style","shadows","camera","pointerEvents","bounceMaterial","friction","restitution","brickGeometry","brickMaterial","Brick","onDestroy","incrementScores","useArcanoidStore","store","handleCollide","useCallback","id","size","material","type","onCollide","castShadow","receiveShadow","scale","Bricks","level","currentLevel","setLevel","initialPositions","useMemo","positionsArray","y","yIndexShift","split","forEach","levelItem","itemIndex","index","push","positions","setPositions","length","removeBrick","idToDelete","filter","map","random","ArcanoidLevels","handleArgs","Handle","api","useFrame","state","set","mouse","x","abs","Background","Ball","ignoreSubscriptionRef","useRef","useSphere","fixedRotation","current","velocity","subscribe","z","needToSpeedup","Wall","wallArgs","Walls","buttons","display","flexDirection","marginTop","button","fontWeight","fontSize","border","margin","padding","MainMenu","startGame","arcanoidTheme","basicText","titleBig","onClick","fontFamily","backgroundColor","transform","create","scores","Arcanoid","alignItems","justifyContent","gravity","tolerance","allowSleep","iterations","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85b3c568.chunk.js","sourcesContent":["export const toRadians = (angle = 0) => {\n    return angle * (Math.PI / 180);\n  }","import { Physics, useBox } from \"@react-three/cannon\";\nimport { Vector3 } from \"@react-three/fiber\";\nimport { FC } from \"react\";\nimport { toRadians } from \"../utils\";\n\ninterface CubeProps {\n    position: Vector3;\n}\n\nconst SplashCube: FC<CubeProps> = ({position}) => {\n    const [ref] = useBox(() => ({\n        args: [1,1,1],\n        position: position as any,\n        mass: 1,\n    }))\n    \n    return (\n        <mesh ref={ref}>\n            <boxGeometry args={[1,1,1]} />\n            <meshLambertMaterial color='white'/>\n        </mesh>\n    )\n}\n\nconst CrusherCube: FC = () => {\n    const [ref] = useBox(() => ({\n        args: [6,6,6],\n        position: [0,-10,0],\n        rotation: [0,toRadians(45),toRadians(45)],\n    }))\n\n    return (\n        <mesh ref={ref}>\n            <boxGeometry args={[6,6,6]} />\n            <meshLambertMaterial color='white'/>\n        </mesh>\n    )\n}\n\nexport const Splash: FC = () => {\n    return (\n        <Physics>\n            <CrusherCube />\n\n            <SplashCube position={[0,0,-2]} />\n            <SplashCube position={[1,0,-2]} />\n            <SplashCube position={[2,0,-2]} />\n            <SplashCube position={[0,0,-1]} />\n            <SplashCube position={[2,0,-1]} />\n            <SplashCube position={[2,0,0]} />\n            <SplashCube position={[1,0,0]} />\n            <SplashCube position={[0,0,0]} />\n            <SplashCube position={[3,0,0]} />\n\n            <directionalLight color='red' intensity={3}/>\n            <directionalLight color='yellow' intensity={2} position={[0, 0, 10]}/>\n            <directionalLight color='lightblue' intensity={1} position={[10, 0, 0]}/>\n        </Physics>\n    );\n};\n","import { Canvas } from \"@react-three/fiber\";\nimport { CSSProperties, FC, useEffect, useState } from \"react\";\nimport { Splash } from \"../scenes/Splash\";\n\nimport { GameInstance } from \"../types\";\n\ninterface Props {\n    instance: GameInstance;\n}\n\nconst styles = {\n    previewContainer: {\n        position: 'absolute',\n        // width: 480,\n        // height: 800,\n        // left: 'calc(50% - 240px)',\n        // top: 'calc(50% - 400px)',\n        // border: 'solid black',\n    } as CSSProperties,\n    absolutePositionStyle: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    } as CSSProperties,\n}\n\nexport const GameInstanceRenderer: FC<Props> = ({instance}) => {\n    const [showSplash, setShowSplash] = useState(true);\n    \n    const {\n        Game,\n        Ui,\n    } = instance;\n\n    useEffect(() => {setTimeout(() => setShowSplash(false), 2000)}, [])\n\n    if (showSplash) {\n        return (\n            <Canvas style={styles.absolutePositionStyle} shadows camera={{position: [10, 10, 10]}}>\n                <Splash />\n            </Canvas>\n        )\n    }\n\n    return (\n        <div style={styles.absolutePositionStyle}>\n            <Canvas style={styles.absolutePositionStyle} shadows camera={{position: [0, 8, 9]}}>\n                <Game />\n            </Canvas>\n            <div style={{...styles.absolutePositionStyle, pointerEvents: 'none'}}>\n                <Ui/>\n            </div>\n        </div>\n    )\n}\n","export const bounceMaterial = {\n    friction: 0,\n    restitution: 0.9,\n}\n","import { useBox } from \"@react-three/cannon\";\nimport { FC, Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useArcanoidStore } from \"..\";\nimport { bounceMaterial } from \"../constants\";\n\ninterface BrickPosition {\n    position: number[];\n    id: string;\n}\n\ninterface BrickProps {\n    onDestroy: (id: string) => void;\n    position: BrickPosition;\n}\n\nconst brickGeometry = <boxGeometry />;\nconst brickMaterial = <meshPhongMaterial color='gray' />;\n\nconst Brick: FC<BrickProps> = ({position, onDestroy}) => {\n    const incrementScores = useArcanoidStore((store) => store.incrementScores);\n\n    const handleCollide = useCallback(() => {\n        incrementScores();\n        \n        onDestroy(position.id);\n    }, [incrementScores, onDestroy, position]);\n\n    const size = 0.9;\n    const [ref] = useBox(() => ({\n        material: bounceMaterial,\n        position: position.position,\n        args: [size, 10, size],\n        type: 'Kinematic',\n        onCollide: handleCollide,\n    }));\n    \n    return (\n        <mesh\n            ref={ref}\n            castShadow\n            receiveShadow\n            scale={[size, 0.8, size]}\n        >\n            {brickMaterial}\n            {brickGeometry}\n        </mesh>\n    )\n}\n\ninterface Props {\n    level: string;\n}\n\nexport const Bricks: FC<Props> = ({level}) => {\n    const {currentLevel, setLevel} = useArcanoidStore((store) => store);\n\n    const initialPositions = useMemo(() => {\n        const positionsArray: BrickPosition[] = [];\n\n        let y = -2;\n        let yIndexShift = 0;\n\n        level\n            .split('')\n            .forEach((levelItem, itemIndex) => {\n                let index = itemIndex - yIndexShift;\n\n                switch(levelItem) {\n                    case 'x':\n                        positionsArray.push({\n                            id: `brick-${itemIndex}`,\n                            position: [index - 4, 0, y - 3],\n                        });\n                        break;\n                    case ';':\n                        y++;\n                        yIndexShift = itemIndex + 1;\n                        break;\n                }\n            })\n\n        return positionsArray;\n    }, [level]);\n    \n    const [positions, setPositions] = useState(initialPositions);\n\n    useEffect(() => {\n        if (positions.length === 0) {\n            setLevel(currentLevel + 1);\n        }\n    }, [positions, setLevel, currentLevel]);\n\n    const removeBrick = useCallback((idToDelete: string) => {\n        setPositions(positions.filter(({id}) => id !== idToDelete))\n    }, [positions]);\n\n    return (\n        <Fragment>\n            {positions.map((position) => (\n                position ? <Brick\n                    key={Math.random()}\n                    position={position}\n                    onDestroy={removeBrick}\n                /> : null\n            ))}\n        </Fragment>\n    );\n};\n","export const ArcanoidLevels = [\n    `\n___x___;\n    `,\n    `\nx_____x;\nx_____x;\nx_____x;\n    `,\n    `\nx_x_x_x;\n_x_x_x_;\nx_x_x_x;\n_x_x_x_;\nx_x_x_x;\n    `,\n    `\nxxxxxxx;\n__xxx__;\nxxxxxxx;\nx_x_x_x;\n    `,\n    `\nx_x_x_x;\nx_x_x_x;\nx_x_x_x;\nx_x_x_x;\nx_x_x_x;\n    `\n]","import { useBox } from \"@react-three/cannon\";\nimport { useFrame, Vector3 } from \"@react-three/fiber\";\nimport { FC } from \"react\";\nimport { bounceMaterial } from \"../constants\";\n\nconst handleArgs: Vector3 = [3,0.2,0.6];\n\nexport const Handle: FC = () => {\n    const [ref, api] = useBox(() => ({\n        args: handleArgs,\n        position: [0,0,6],\n        type: 'Kinematic',\n        material: bounceMaterial,\n    }))\n\n    useFrame((state) => {\n        api.position.set(state.mouse.x * 5, 0, 7 - Math.abs(state.mouse.x) * 2);\n        api.rotation.set(0, state.mouse.x, 0);\n    });\n\n    return (\n        <mesh\n            ref={ref}\n            castShadow\n            receiveShadow\n        >\n            <boxGeometry args={handleArgs}/>\n            <meshStandardMaterial color='gray' />\n        </mesh>\n    );\n};\n","import { FC } from \"react\";\nimport { toRadians } from \"../../../core/utils\";\n\nexport const Background: FC = () => {\n    return (\n        <mesh\n            receiveShadow\n            position={[0,0,0]}\n            rotation={[toRadians(-90),0,0]}\n        >\n            <planeGeometry args={[10,30,1]}/>\n            <meshStandardMaterial color='white'/>\n        </mesh>\n    )\n}","import { useSphere } from \"@react-three/cannon\";\nimport { FC, useEffect, useRef } from \"react\";\nimport { useArcanoidStore } from \"..\";\nimport { bounceMaterial } from \"../constants\";\n\nconst MIN_SPEED = 8;\n\nexport const Ball: FC = () => {\n    const ignoreSubscriptionRef = useRef(true);\n    const { setLevel, currentLevel } = useArcanoidStore();\n    const [ref, api] = useSphere(() => ({\n        mass: 0.00000000001,\n        args: 0.2,\n        fixedRotation: true,\n        material: bounceMaterial,\n    }));\n\n    useEffect(() => {\n        ignoreSubscriptionRef.current = true;\n\n        api.velocity.set(0,0,1);\n        api.position.set(0,0,2);\n    }, [api, currentLevel]);\n\n    useEffect(() => {\n        api.velocity.subscribe(([x,y,z]) => {\n            if (ignoreSubscriptionRef.current) {\n                return;\n            }\n\n            const needToSpeedup = Math.abs(x) < MIN_SPEED && Math.abs(z) < MIN_SPEED;\n\n            api.velocity.set(\n                needToSpeedup ? x * 1.1 : x,\n                0,\n                needToSpeedup ? z * 1.1 : z,\n            )\n        });\n        api.position.subscribe(([x,y,z]) => {\n            if (ignoreSubscriptionRef.current) {\n                ignoreSubscriptionRef.current = false;\n                return;\n            }\n\n            api.position.set(x,0,z);\n\n            if (z > 9) {\n                setLevel(-1);\n            }\n        });\n    }, [api, setLevel, ignoreSubscriptionRef]);\n\n    return (\n        <mesh\n            ref={ref}\n            castShadow\n            receiveShadow\n        >\n            <sphereGeometry args={[0.2,10,10]} />\n            <meshStandardMaterial color='#F76242' />\n        </mesh>\n    );\n};\n","import { useBox } from \"@react-three/cannon\";\nimport { Vector3 } from \"@react-three/fiber\";\nimport { FC, Fragment } from \"react\";\nimport { bounceMaterial } from \"../constants\";\n\ninterface WallProps {\n    type: 'horizontal' | 'vertical';\n    position: number[];\n}\n\nexport const Wall: FC<WallProps> = ({type, position}) => {\n    const wallArgs: Vector3 = type === 'horizontal' ? [20, 1, 2] : [2, 1, 20];\n\n    const [ref] = useBox(() => ({\n        type: 'Kinematic',\n        args: wallArgs,\n        material: bounceMaterial,\n        position,\n    }))\n\n    return (\n        <mesh\n            ref={ref}\n            castShadow\n            receiveShadow\n        >\n            <boxGeometry args={wallArgs}/>\n            <meshStandardMaterial color='white'/>\n        </mesh>\n    );\n};\n\nexport const Walls: FC = () => {\n    \n\n    return (\n        <Fragment>\n            <Wall type='horizontal' position={[0,0,-9]} />\n\n            <Wall type='vertical' position={[-5,0,0]} />\n            <Wall type='vertical' position={[5,0,0]} />\n        </Fragment>\n    );\n};\n","import { CSSProperties, FC, useCallback } from \"react\";\n\nimport {arcanoidTheme, useArcanoidStore} from '../../index';\n\nconst styles = {\n    buttons: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: '30%',\n    } as CSSProperties,\n    button: {\n        fontWeight: 'bold',\n        fontSize: 25,\n        border: 'none',\n        margin: 10,\n        padding: 10,\n        pointerEvents: 'all',\n    } as CSSProperties,\n}\n\nexport const MainMenu: FC = () => {\n    const setLevel = useArcanoidStore(({setLevel}) => setLevel);\n    const startGame = useCallback(() => {\n        setLevel(0);\n    }, [setLevel]);\n\n    return (\n        <div>\n            <p style={{\n                ...arcanoidTheme.basicText,\n                ...arcanoidTheme.titleBig,\n            }}>{'<JustArcanoid />'}</p>\n            <div style={styles.buttons}>\n                <button\n                    style={styles.button}\n                    onClick={startGame}\n                >\n                    Start\n                </button>\n                <button style={styles.button}>\n                    Options\n                </button>\n            </div>\n\n        </div>\n    );\n};\n","import { CSSProperties, FC, Fragment } from \"react\";\nimport create from 'zustand';\n\nimport { GameInstance } from \"../../core/types\";\nimport { Bricks } from './components/Bricks';\nimport { ArcanoidLevels } from \"./levels\";\nimport { Handle } from \"./components/Handle\";\nimport { Background } from \"./components/Background\";\nimport { Ball } from \"./components/Ball\";\nimport { Walls } from \"./components/Walls\";\nimport { MainMenu } from \"./components/UI/MainMenu\";\nimport { Physics } from \"@react-three/cannon\";\n\nexport const arcanoidTheme = {\n    basicText: {\n        fontFamily: 'Skia',\n        color: 'white',\n        backgroundColor: '#F76242',\n        padding: 10,\n    } as CSSProperties,\n    titleBig: {\n        fontWeight: 'bold',\n        fontSize: 48,\n        transform: 'rotate(13deg)'\n    } as CSSProperties,\n}\n\ntype ArcanoidStore = {\n    scores: number;\n    currentLevel: number;\n\n    incrementScores: VoidFunction;\n    setLevel: (index: number) => void;\n}\n\nexport const useArcanoidStore = create<ArcanoidStore>((set) => ({\n    scores: 0,\n    currentLevel: -1,\n    incrementScores: () => set((state) => ({scores: state.scores + 1})),\n    setLevel: (index: number) => set(() => ({currentLevel: index})),\n}));\n\nconst ArcanoidGame: FC = () => {\n    const currentLevel = useArcanoidStore(({currentLevel}) => currentLevel);\n\n    if(currentLevel === -1) {\n        return null;\n    }\n\n    return (\n        <Fragment>\n            <Physics\n                gravity={[0,0,0]}\n                tolerance={0}\n                allowSleep\n                size={100}\n                iterations={1}\n            >\n                <ambientLight intensity={0.5} />\n                <directionalLight castShadow position={[5, 2, 5]} intensity={1}/>\n\n                <Bricks key={currentLevel} level={ArcanoidLevels[currentLevel]} />\n                <Handle />\n                <Ball />\n                <Walls />\n                <Background />\n            </Physics>\n        </Fragment>\n    );\n};\n\nconst ArcanoidUI: FC = () => {\n    const {scores, currentLevel} = useArcanoidStore();\n\n    return (\n        <div style={{margin: 10, display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center'}}>\n            {currentLevel === -1 && <MainMenu />}\n            <p style={arcanoidTheme.basicText}>Score: {scores}</p>\n        </div>\n    );\n};\n\nexport const Arcanoid: GameInstance = {\n    Ui: ArcanoidUI,\n    Game: ArcanoidGame,\n}\n","import { Fragment } from 'react';\nimport { GameInstanceRenderer } from './core/components/GameInstanceRenderer';\nimport { Arcanoid } from './games/Arcanoid';\n\nexport default function App() {\n  return (\n    <Fragment>\n      <GameInstanceRenderer instance={Arcanoid}/>\n    </Fragment>\n  )\n}\n","import ReactDOM from 'react-dom'\nimport './styles.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}